app-id: io.github.asafelobotomy.SearchAndDestroy
runtime: org.freedesktop.Platform
runtime-version: "23.08"
sdk: org.freedesktop.Sdk
base: com.riverbankcomputing.PyQt.BaseApp
base-version: "6.8"
command: search-and-destroy

cleanup-commands:
  - /app/cleanup-BaseApp.sh

sdk-extensions:
  - org.freedesktop.Sdk.Extension.rust-stable

build-options:
  # Optimize for disk usage and build performance
  cflags: "-O2 -g -pipe"
  cxxflags: "-O2 -g -pipe"
  env:
    # Prevent excessive debug output
    V: "0"
    # Cargo settings for Rust builds
    CARGO_HOME: "/run/build/cargo"
    RUSTUP_HOME: "/run/build/rustup"
  strip: true
  no-debuginfo: true

finish-args:
  # GUI access (Wayland preferred, X11 fallback)
  - --share=ipc
  - --socket=wayland
  - --socket=fallback-x11

  # GPU access for acceleration features (if available)
  - --device=dri

  # File access via portals (secure)
  - --filesystem=xdg-run/app/org.freedesktop.portal.Documents:create
  - --filesystem=xdg-documents
  - --filesystem=xdg-download

  # Network access for virus definition updates and API features
  - --share=network

  # System integration
  - --talk-name=org.freedesktop.Notifications
  - --talk-name=org.freedesktop.FileManager1
  - --talk-name=org.freedesktop.portal.Desktop
  - --talk-name=org.freedesktop.portal.FileChooser

  # D-Bus access for system monitoring (read-only)
  - --system-talk-name=org.freedesktop.systemd1

  # Temporary files access
  - --filesystem=/tmp

cleanup:
  # Remove development files to reduce package size
  - /include
  - /lib/pkgconfig
  - /lib/cmake
  - /lib/*.la
  - /lib/*.a
  - /share/man
  - /share/doc
  - /share/gtk-doc
  - /share/info
  - "*.la"
  - "*.a"

modules:
  # Module 1: json-c (lightweight C library for ClamAV)
  - name: json-c
    buildsystem: cmake-ninja
    config-opts:
      - -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - -DENABLE_STATIC_LIB=OFF
      - -DENABLE_SHARED_LIB=ON
      - -DCMAKE_INSTALL_PREFIX=/app
    sources:
      - type: git
        url: https://github.com/json-c/json-c.git
        tag: json-c-0.18-20240915
        commit: 41a55cfcedb54d9c1874f2f0eb07b504091d7e37
    cleanup:
      - /include
      - /lib/cmake
      - /lib/pkgconfig
      - "*.a"

  # Module 2: OpenLDAP (for python-ldap enterprise authentication support)
  - name: openldap
    buildsystem: autotools
    config-opts:
      - --disable-slapd
      - --disable-slurpd
      - --disable-static
      - --enable-shared
      - --with-tls=openssl
      - --disable-backends
      - --disable-overlays
    sources:
      - type: archive
        url: https://www.openldap.org/software/download/OpenLDAP/openldap-release/openldap-2.6.8.tgz
        sha256: 48969323e94e3be3b03c6a132942dcba7ef8d545f2ad35401709019f696c3c4e
    cleanup:
      - /include
      - /lib/pkgconfig
      - /lib/*.la
      - /lib/*.a
      - /share

  # Module 3: Python dependencies (all wheels, no Rust compilation needed)
  - python-deps-wheels.json

  # Module 4: ClamAV (with Rust support and optimizations)
  - name: clamav
    buildsystem: cmake-ninja
    build-options:
      append-path: /usr/lib/sdk/rust-stable/bin
      env:
        CARGO_HOME: /run/build/clamav/cargo
        RUSTUP_HOME: /run/build/clamav/rustup
        # Optimize Rust compilation
        CARGO_PROFILE_RELEASE_DEBUG: "false"
        CARGO_PROFILE_RELEASE_STRIP: "true"
        CARGO_PROFILE_RELEASE_OPT_LEVEL: "2"
        CARGO_PROFILE_RELEASE_LTO: "thin"
    config-opts:
      - -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - -DENABLE_STATIC_LIB=OFF
      - -DENABLE_SHARED_LIB=ON
      - -DENABLE_SYSTEMD=OFF
      - -DCMAKE_INSTALL_PREFIX=/app
      # Disable unnecessary features to reduce build time and size
      - -DENABLE_CLAMONACC=OFF
      - -DENABLE_MILTER=OFF
      - -DENABLE_UNRAR=OFF
      - -DENABLE_APP=ON
      - -DENABLE_DOXYGEN=OFF
      - -DENABLE_EXAMPLES=OFF
      - -DENABLE_MAN_PAGES=OFF
      - -DENABLE_TESTS=OFF
      # Enable features needed for our application
      - -DENABLE_LIBCLAMAV=ON
      - -DENABLE_CLAMSCAN=ON
      - -DENABLE_FRESHCLAM=ON
    sources:
      - type: archive
        url: https://github.com/Cisco-Talos/clamav/releases/download/clamav-1.4.3/clamav-1.4.3.tar.gz
        sha256: d874cabf3d4765b35b518ef535658a1e6ec74802006a1d613f9f124aa1343210
      # Bundle pre-fetched ClamAV database files if available
      - type: dir
        path: clamav-db
        dest: clamav-db
    post-install:
      # Install ClamAV databases if present
      - install -d /app/share/clamav
      - |
        if [ -d "clamav-db" ] && ls clamav-db/*.cvd >/dev/null 2>&1; then
          install -Dm644 clamav-db/*.cvd /app/share/clamav/
        fi
      # Create freshclam config for updates
      - install -d /app/etc/clamav
      - |
        cat > /app/etc/clamav/freshclam.conf << 'EOF'
        DatabaseDirectory /app/share/clamav
        UpdateLogFile /tmp/freshclam.log
        LogFileMaxSize 2M
        LogTime yes
        LogRotate yes
        DNSDatabaseInfo current.cvd.clamav.net
        DatabaseMirror db.local.clamav.net
        DatabaseMirror database.clamav.net
        MaxAttempts 3
        CompressLocalDatabase no
        EOF
    cleanup:
      - /include
      - /lib/pkgconfig
      - /lib/cmake
      - /share/man
      - "*.a"

  # Module 5: xanadOS Search & Destroy Application
  - name: search-and-destroy
    buildsystem: simple
    build-commands:
      # Install launcher script
      - install -Dm755 packaging/flatpak/search-and-destroy.sh /app/bin/search-and-destroy

      # Install application code
      - cp -r app/ /app/lib/search-and-destroy/
      - chmod -R 755 /app/lib/search-and-destroy/

      # Install desktop file
      - install -Dm644 packaging/flatpak/io.github.asafelobotomy.SearchAndDestroy.desktop /app/share/applications/io.github.asafelobotomy.SearchAndDestroy.desktop

      # Install metadata
      - install -Dm644 packaging/flatpak/io.github.asafelobotomy.SearchAndDestroy.metainfo.xml /app/share/metainfo/io.github.asafelobotomy.SearchAndDestroy.metainfo.xml

      # Install icons
      - install -Dm644 packaging/icons/io.github.asafelobotomy.SearchAndDestroy.svg /app/share/icons/hicolor/scalable/apps/io.github.asafelobotomy.SearchAndDestroy.svg
      - |
        for size in 16 32 48 64 128; do
          if [ -f "packaging/icons/io.github.asafelobotomy.SearchAndDestroy-${size}.png" ]; then
            install -Dm644 "packaging/icons/io.github.asafelobotomy.SearchAndDestroy-${size}.png" "/app/share/icons/hicolor/${size}x${size}/apps/io.github.asafelobotomy.SearchAndDestroy.png"
          fi
        done

      # Install configuration files
      - install -d /app/share/search-and-destroy/config
      - |
        if [ -d "config" ]; then
          cp -r config/*.toml config/*.json /app/share/search-and-destroy/config/ 2>/dev/null || true
        fi

      # Create runtime directories
      - install -d /app/var/lib/search-and-destroy
      - install -d /app/var/log/search-and-destroy
      - install -d /app/var/cache/search-and-destroy

      # Set up version information
      - echo "3.0.0" > /app/share/search-and-destroy/VERSION
      - |
        cat > /app/share/search-and-destroy/BUILD_INFO << 'EOF'
        Version: 3.0.0
        Build Type: Flatpak
        Features: ClamAV, PyQt6, GPU-Acceleration, ML/AI, Enterprise-Security
        Runtime: Freedesktop 23.08 + PyQt BaseApp 6.8
        Built: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
        EOF

    sources:
      - type: git
        url: https://github.com/asafelobotomy/xanadOS-Search_Destroy.git
        commit: b385e3aad80b9acd544aea0cfe8955cd132a91bd
