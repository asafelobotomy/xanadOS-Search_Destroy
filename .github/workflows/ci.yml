name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write
  checks: write

jobs:
  validation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Lint (markdownlint via npm script)
        run: npm run lint
        continue-on-error: true

      - name: Run Prettier check (if configured)
        run: |
          if [ -f "package.json" ] && grep -q '"format:check"' package.json; then
            npm run format:check
          else
            echo "No format:check script; skipping."
          fi
        continue-on-error: true

      - name: Validate template system
        run: node .github/validation/templates/template-validation-system.js

      - name: Quick validate (lint + validate)
        run: npm run quick:validate

      - name: Run quality checks (if scripts exist)
        run: |
          if [ -f "scripts/validation/validate-policies.sh" ]; then
            chmod +x scripts/validation/validate-policies.sh
            ./scripts/validation/validate-policies.sh || true
          fi
          if [ -f "scripts/validation/validate-agent-workflow.sh" ]; then
            chmod +x scripts/validation/validate-agent-workflow.sh
            ./scripts/validation/validate-agent-workflow.sh || true
          fi
          if [ -f "scripts/validation/validate-version-control.sh" ]; then
            chmod +x scripts/validation/validate-version-control.sh
            ./scripts/validation/validate-version-control.sh || true
          fi

      - name: Verify repository structure
        run: |
          if [ -f "scripts/validation/verify-structure.sh" ]; then
            chmod +x scripts/validation/verify-structure.sh
            ./scripts/validation/verify-structure.sh
          fi

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  markdown-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install markdownlint-cli
        run: npm install -g markdownlint-cli

      - name: Run Markdown lint
        run: markdownlint "**/*.md" --ignore node_modules --ignore archive


  spellcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Spellcheck
        uses: rojopolis/spellcheck-github-actions@0.35.0
        with:
          config_path: .github/workflows/spellcheck.yml
          task_name: Markdown

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4

  build-test:
    runs-on: ubuntu-latest
    needs: [validation, markdown-lint]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: |
          if [ -f "package.json" ] && grep -q '"build"' package.json; then
            npm run build
          else
            echo "No build script found, skipping build"
          fi

      - name: Run tests
        run: |
          if [ -f "package.json" ] && grep -q '"test"' package.json; then
            npm test
          else
            echo "No test script found, skipping tests"
          fi

  pr-comment:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [validation, security-scan, markdown-lint]
    steps:
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const pr_number = context.payload.pull_request.number;

            const comment = `## üîç CI/CD Results

            ‚úÖ Template validation completed
            ‚úÖ Security scan completed
            ‚úÖ Markdown lint completed
            Your pull request has passed all automated checks!

            **Next Steps:**
            - Ensure all required approvals are obtained
            - Verify manual testing is complete
            - Check that documentation is updated
            `;

            github.rest.issues.createComment({
              owner,
              repo,
              issue_number: pr_number,
              body: comment
            });

  python-quality:
    name: Python Quality (format then validate)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python tooling
        run: |
          python -m pip install --upgrade pip
          pip install ruff black flake8 mypy pytest

      - name: Auto-format (ruff + black)
        run: |
          ruff format . || true
          black . || true

      - name: Validate Python (non-destructive checks)
        run: |
          bash scripts/tools/quality/check-python.sh || exit 1
