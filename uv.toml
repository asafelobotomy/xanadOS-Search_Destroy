# UV Configuration for Modern Python Package Management
# https://docs.astral.sh/uv/

[tool.uv]
# Use Python 3.11+ for modern features
python = ">=3.11"

# Modern dependency resolution with advanced features
resolution = "highest"
prerelease = "allow"

# Enhanced build isolation and caching
cache-dir = ".uv-cache"
build-backend = "hatchling.build"

# Development dependencies configuration
dev-dependencies = [
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pytest>=8.3.0",
    "pytest-cov>=6.0.0",
    "bandit[toml]>=1.7.10",
    "safety>=3.2.10",
    "black>=24.10.0",
    "pre-commit>=4.0.1",
]

# Security-focused package sources and verification
index-url = "https://pypi.org/simple/"
extra-index-url = []

# Lock file configuration for reproducible builds
lock = true
upgrade = true

# Build configuration optimized for security applications
[tool.uv.build]
# Exclude development and test files from distributions
exclude = [
    "tests/",
    "dev/",
    "docs/drafts/",
    "*.log",
    "coverage.xml",
    ".pytest_cache/",
    "__pycache__/",
]

# Include security-critical files
include = [
    "app/",
    "config/",
    "scripts/tools/",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
]

[tool.uv.dependency-groups]
# Security analysis tools for malware detection
security = [
    "yara-python>=4.5.0",
    "volatility3>=2.7.0",
    "scapy>=2.5.0",
    "pycryptodome>=3.20.0",
    "capstone>=5.0.0",
    "frida>=16.0.0",
]

# Advanced malware analysis capabilities
malware-analysis = [
    "vivisect>=1.0.8",
    "pefile>=2023.2.7",
    "elftools>=0.31",
    "oletools>=0.60.2",
    "ssdeep>=3.4",
]

# Complete development environment
dev-full = [
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pytest>=8.3.0",
    "pytest-cov>=6.0.0",
    "pytest-benchmark>=4.0.0",
    "bandit[toml]>=1.7.10",
    "safety>=3.2.10",
    "pre-commit>=4.0.1",
    "tox>=4.21.2",
]

# Performance profiling and optimization
performance = [
    "py-spy>=0.3.14",
    "scalene>=1.5.46",
    "memory-profiler>=0.61.0",
    "line-profiler>=4.1.3",
]

[tool.uv.sources]
# Pin critical security dependencies to specific versions for security
# This prevents supply chain attacks and ensures reproducible builds
yara-python = { version = ">=4.5.0" }
volatility3 = { version = ">=2.7.0" }
scapy = { version = ">=2.5.0" }
